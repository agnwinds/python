System_type(star,cv,bh,agn,previous)		agn
Central_object.mass(msol)                    3e6
Central_object.radius(cm)                    1e13
Disk.type(none,flat,vertically.extended)		flat
Disk.radiation(yes,no)		yes
Disk.rad_type_to_make_wind(bb,models)		bb
Disk.temperature.profile(standard,readin)		standard
Disk.mdot(msol/yr)                    9.98e-03
Disk.radmax(cm)		1e15
Central_object.radiation(yes,no)		no
Wind.radiation(yes,no)		yes
Wind.number_of_components		1
Wind.type(SV,star,hydro,corona,kwd,homologous,shell,imported)		sv
Wind.coord_system(spherical,cylindrical,polar,cyl_var)		cylindrical
Wind.dim.in.x_or_r.direction		100
Wind.dim.in.z_or_theta.direction		100
Photons_per_cycle                    1e8
Ionization_cycles                    10
Spectrum_cycles                    5
Wind.ionization(on.the.spot,ML93,LTE_tr,LTE_te,fixed,matrix_bb,matrix_pow)		matrix_pow
Line_transfer(pure_abs,pure_scat,sing_scat,escape_prob,thermal_trapping,macro_atoms,macro_atoms_thermal_trapping)		macro_atoms_thermal_trapping
Atomic_data		data/h20_hetop_standard80.dat
Surface.reflection.or.absorption(reflect,absorb,thermalized.rerad)		reflect
Wind_heating.extra_processes(none,adiabatic,nonthermal,both)		adiabatic
Wind.mdot(msol/yr)                    2.99e-3
SV.diskmin(units_of_rstar)		1
SV.diskmax(units_of_rstar)                    377
SV.thetamin(deg)		20
SV.thetamax(deg)		65
SV.mdot_r_exponent		0
SV.v_infinity(in_units_of_vescape		1
SV.acceleration_length(cm)		5e16
SV.acceleration_exponent		1.5
SV.v_zero_mode(fixed,sound_speed)		sound_speed
SV.v_zero(multiple_of_sound_speed)		1
SV.gamma(streamline_skew;1=usually)		1.0
Wind.radmax(cm)		5e17
Wind.t.init		35000
Wind.filling_factor(1=smooth,<1=clumped)		0.1
Disk.rad_type_in_final_spectrum(bb,models,uniform)		bb
Spectrum.wavemin(Angstroms)		100
Spectrum.wavemax(Angstroms)		10000
Spectrum.no_observers		5
Spectrum.angle(0=pole)		10
Spectrum.angle(0=pole)		35
Spectrum.angle(0=pole)		60
Spectrum.angle(0=pole)		75
Spectrum.angle(0=pole)		85
Spectrum.live_or_die(live.or.die,extract)		extract
Spectrum.type(flambda,fnu,basic)		flambda
Reverb.type(none,photon,wind,matom)		none
Photon_sampling.approach(T_star,cv,yso,AGN,min_max_freq,user_bands,cloudy_test,wide,logarithmic)		agn
