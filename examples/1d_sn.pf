Wind_type(0=SV,1=Sphere,2=Previous,3=Proga,4=Corona,5=knigge,6=homologous,7=yso,8=elvis,9=shell)                   6
Atomic_data                       data/standard_sn_kurucz
photons_per_cycle                             80000
Ionization_cycles                               20
spectrum_cycles                                 1
Coord.system(0=spherical,1=cylindrical,2=spherical_polar,3=cyl_var)                   0
Wind.dim.in.x_or_r.direction                     30
Wind_ionization(0=on.the.spot,1=LTE,2=fixed,3=recalc_bb,5=recalc_pow,6=pairwise_bb,7=pairwise_pow,8=matrix_bb,9=matrix_pow)      3
Line_transfer(0=pure.abs,1=pure.scat,2=sing.scat,3=escape.prob,6=macro_atoms,7=macro_atoms+aniso.scattering)       3
Thermal_balance_options(0=everything.on,1=no.adiabatic) 1
System_type(0=star,1=binary,2=agn)                    0
disk.type(0=no.disk,1=standard.flat.disk,2=vertically.extended.disk)                   0
Star_radiation(y=1)                               1
Disk_radiation(y=1)                              0
Boundary_layer_radiation(y=1)                     0
Wind_radiation(y=1)                               1
Rad_type_for_star(0=bb,1=models)_to_make_wind                    0
mstar(msol)                                     0.8
rstar(cm)                                     1.23552e15
tstar                                         10672.1
wind.radmax(cm)                              2.2464e15
wind.t.init                                  10000.0
homologous_boundary_mdot(msol/yr)          26.8
homologous.radmin(cm)                    1.23552e15
homologous.vbase(cm)                        1.1e9
homologous.density_exponent                  7.0
wind.filling_factor(1=smooth,<1=clumpted)		1
Rad_type_for_star(0=bb,1=models,2=uniform)_in_final_spectrum                    0
spectrum_wavemin                               200
spectrum_wavemax                               20000
no_observers					  1
angle(0=pole)                                    45
phase(0=inferior_conjunction)                   0.5
live.or.die(0).or.extract(anything_else)                    1                  n
spec.type(flambda(1),fnu(2),basic(other)                    2
Photon.sampling.approach(0=T,1=(f1,f2),2=cv,3=yso,4=user_defined,5=cloudy_test,6=wide,7=AGN,8=logarithmic)                    2
